// <auto-generated />
using System;
using HRM_AI.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRM_AI.Repositories.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HRM_AI.Repositories.Entities.BaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Account", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerificationCodeExpiryTime")
                        .HasColumnType("datetime2");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.AccountRole", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("AccountRoles");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CV", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("FileAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("CreatedById");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Candidate", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid?>("ApproveByGmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CVId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InterviewResult")
                        .HasColumnType("int");

                    b.Property<string>("OfferNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferStatus")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ApproveByGmId");

                    b.HasIndex("CVId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CandidateAttribute", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GroupIndex")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CandidateId");

                    b.ToTable("CandidateAttributes");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Email", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Job", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CreatedById");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.JobCV", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("CVId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("CVId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("JobId");

                    b.ToTable("JobCVs");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.JobDescription", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("JobId");

                    b.ToTable("JobDescriptions");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.JobHRAssignment", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("HRId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("HRId");

                    b.HasIndex("JobId");

                    b.ToTable("JobHRAssignments");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.RefreshToken", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CreatedById");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Role", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.AccountRole", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "Account")
                        .WithMany("AccountRoles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRM_AI.Repositories.Entities.Role", "Role")
                        .WithMany("AccountRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CV", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Candidate", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "ApproveByGm")
                        .WithMany()
                        .HasForeignKey("ApproveByGmId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HRM_AI.Repositories.Entities.CV", "CV")
                        .WithMany("Candidates")
                        .HasForeignKey("CVId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApproveByGm");

                    b.Navigation("CV");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CandidateAttribute", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Candidate", "Candidate")
                        .WithMany("CandidateAttributes")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Job", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.JobCV", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.CV", "CV")
                        .WithMany("JobCVs")
                        .HasForeignKey("CVId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HRM_AI.Repositories.Entities.Job", "Job")
                        .WithMany("JobCVs")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CV");

                    b.Navigation("CreatedBy");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.JobDescription", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Job", "Job")
                        .WithMany("JobDescriptions")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.JobHRAssignment", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "HR")
                        .WithMany()
                        .HasForeignKey("HRId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRM_AI.Repositories.Entities.Job", "Job")
                        .WithMany("JobHRAssignments")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HR");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.RefreshToken", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Account", b =>
                {
                    b.Navigation("AccountRoles");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CV", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("JobCVs");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Candidate", b =>
                {
                    b.Navigation("CandidateAttributes");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Job", b =>
                {
                    b.Navigation("JobCVs");

                    b.Navigation("JobDescriptions");

                    b.Navigation("JobHRAssignments");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Role", b =>
                {
                    b.Navigation("AccountRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
