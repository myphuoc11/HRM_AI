// <auto-generated />
using System;
using HRM_AI.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRM_AI.Repositories.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250725035510_EntityV2")]
    partial class EntityV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HRM_AI.Repositories.Entities.BaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Account", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerificationCodeExpiryTime")
                        .HasColumnType("datetime2");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.AccountRole", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("AccountRoles");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CVApplicant", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("CampaignPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Point")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("CampaignPositionId");

                    b.HasIndex("CreatedById");

                    b.ToTable("CVApplicants");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CVApplicantDetails", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("CVApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GroupIndex")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CVApplicantId");

                    b.ToTable("CVApplicantDetails");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Campaign", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasIndex("CreatedById");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CampaignPosition", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Embedding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalSlot")
                        .HasColumnType("int");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.ToTable("CampaignPositions");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CampaignPositionDetail", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("CampaignPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GroupIndex")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CampaignPositionId");

                    b.ToTable("CampaignPositionDetails");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Department", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Email", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.InterviewOutcome", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InterviewScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CreatedById");

                    b.HasIndex("InterviewScheduleId");

                    b.ToTable("InterviewOutcomes");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.InterviewSchedule", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("CVApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InterviewTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Round")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("CVApplicantId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("InterviewTypeId");

                    b.ToTable("InterviewSchedules");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.InterviewTypeDictionary", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("InterviewTypeDictionarys");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Interviewer", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("InterviewScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InterviewerAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("InterviewScheduleId");

                    b.HasIndex("InterviewerAccountId");

                    b.ToTable("Interviewers");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.RefreshToken", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CreatedById");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.RequestOnboard", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.ToTable("RequestOnboards");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Role", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.SystemConfig", b =>
                {
                    b.HasBaseType("HRM_AI.Repositories.Entities.BaseEntity");

                    b.Property<DateOnly?>("EffectiveFrom")
                        .HasColumnType("date");

                    b.Property<int>("EntityType")
                        .HasColumnType("int");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SystemConfigs");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Account", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.AccountRole", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "Account")
                        .WithMany("AccountRoles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRM_AI.Repositories.Entities.Role", "Role")
                        .WithMany("AccountRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CVApplicant", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.CampaignPosition", "CampaignPosition")
                        .WithMany("CVApplicants")
                        .HasForeignKey("CampaignPositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany("CVApplicants")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CampaignPosition");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CVApplicantDetails", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.CVApplicant", "CVApplicant")
                        .WithMany("CVApplicantDetails")
                        .HasForeignKey("CVApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CVApplicant");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Campaign", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany("Campaigns")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CampaignPosition", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Campaign", "Campaign")
                        .WithMany("CampaignPositions")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany("CampaignPositions")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HRM_AI.Repositories.Entities.Department", "Department")
                        .WithMany("CampaignPositions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("CreatedBy");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CampaignPositionDetail", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.CampaignPosition", "CampaignPosition")
                        .WithMany("CampaignPositionDetails")
                        .HasForeignKey("CampaignPositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignPosition");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.InterviewOutcome", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HRM_AI.Repositories.Entities.InterviewSchedule", "InterviewSchedule")
                        .WithMany()
                        .HasForeignKey("InterviewScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("InterviewSchedule");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.InterviewSchedule", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.CVApplicant", "CVApplicant")
                        .WithMany("InterviewSchedules")
                        .HasForeignKey("CVApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany("InterviewSchedules")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HRM_AI.Repositories.Entities.InterviewTypeDictionary", "InterviewType")
                        .WithMany("InterviewSchedules")
                        .HasForeignKey("InterviewTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CVApplicant");

                    b.Navigation("CreatedBy");

                    b.Navigation("InterviewType");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Interviewer", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.InterviewSchedule", "InterviewSchedule")
                        .WithMany("Interviewers")
                        .HasForeignKey("InterviewScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRM_AI.Repositories.Entities.Account", "InterviewerAccount")
                        .WithMany("Interviewers")
                        .HasForeignKey("InterviewerAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InterviewSchedule");

                    b.Navigation("InterviewerAccount");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.RefreshToken", b =>
                {
                    b.HasOne("HRM_AI.Repositories.Entities.Account", "CreatedBy")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Account", b =>
                {
                    b.Navigation("AccountRoles");

                    b.Navigation("CVApplicants");

                    b.Navigation("CampaignPositions");

                    b.Navigation("Campaigns");

                    b.Navigation("InterviewSchedules");

                    b.Navigation("Interviewers");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CVApplicant", b =>
                {
                    b.Navigation("CVApplicantDetails");

                    b.Navigation("InterviewSchedules");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Campaign", b =>
                {
                    b.Navigation("CampaignPositions");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.CampaignPosition", b =>
                {
                    b.Navigation("CVApplicants");

                    b.Navigation("CampaignPositionDetails");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Department", b =>
                {
                    b.Navigation("CampaignPositions");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.InterviewSchedule", b =>
                {
                    b.Navigation("Interviewers");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.InterviewTypeDictionary", b =>
                {
                    b.Navigation("InterviewSchedules");
                });

            modelBuilder.Entity("HRM_AI.Repositories.Entities.Role", b =>
                {
                    b.Navigation("AccountRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
